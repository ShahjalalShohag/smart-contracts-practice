{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9e9b73d4200fadb6b2a5d6fc00874fce271ec29292ea5118056812a8aa33145a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "851224",
    "logsBloom": "0x
    "blockHash": "0x1bec116073bf03c51055964e539ef3be0c51d5f12a9fdc5da2cee3201bc0662e",
    "transactionHash": "0x9e9b73d4200fadb6b2a5d6fc00874fce271ec29292ea5118056812a8aa33145a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "851224",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "952d54eb62d6c984aa8a0bfb50c32eaf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    AggregatorV3Interface public immutable priceFeed;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    constructor(address _priceFeed) {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x022fa120b69456df86becf62dcbc74cfbbe5a398a51dc503261fc5f891e832dc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // // Goerli ETH / USD Address\\n        // // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa871749ef9b0fca5f1ec1810f5478f859ca50c4af59aeff8883106b54c7faf77\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405162000fd438038062000fd483398181016040528101906100349190610105565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610132565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d2826100a7565b9050919050565b6100e2816100c7565b81146100ed57600080fd5b50565b6000815190506100ff816100d9565b92915050565b60006020828403121561011b5761011a6100a2565b5b6000610129848285016100f0565b91505092915050565b60805160a051610e6e62000166600039600081816102d6015261055f0152600081816101ab015261053b0152610e6e6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d4565b005b3480156100a357600080fd5b506100be60048036038101906100b991906107a6565b610514565b6040516100cb91906107ec565b60405180910390f35b3480156100e057600080fd5b506100e961052c565b6040516100f691906107ec565b60405180910390f35b34801561010b57600080fd5b50610114610539565b6040516101219190610866565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b5061014961055d565b6040516101569190610890565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108d7565b610581565b6040516101939190610890565b60405180910390f35b6802b5e3af16b18800006101d97f0000000000000000000000000000000000000000000000000000000000000000346105c090919063ffffffff16565b101561021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610961565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026891906109b0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610359576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104045760006001828154811061037f5761037e610a06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fc90610a35565b91505061035c565b50600067ffffffffffffffff8111156104205761041f610a7e565b5b60405190808252806020026020018201604052801561044e5781602001602082028036833780820191505090505b506001908051906020019061046492919061069c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048b90610ade565b60006040518083038185875af1925050503d80600081146104c8576040519150601f19603f3d011682016040523d82523d6000602084013e6104cd565b606091505b5050905080610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890610b3f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cc836105fc565b90506000670de0b6b3a764000085836105e59190610b5f565b6105ef9190610be8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610ca6565b5050509150506402540be400816106949190610d21565b915050919050565b828054828255906000526020600020908101928215610715579160200282015b828111156107145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bc565b5b5090506107229190610726565b5090565b5b8082111561073f576000816000905550600101610727565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077382610748565b9050919050565b61078381610768565b811461078e57600080fd5b50565b6000813590506107a08161077a565b92915050565b6000602082840312156107bc576107bb610743565b5b60006107ca84828501610791565b91505092915050565b6000819050919050565b6107e6816107d3565b82525050565b600060208201905061080160008301846107dd565b92915050565b6000819050919050565b600061082c61082761082284610748565b610807565b610748565b9050919050565b600061083e82610811565b9050919050565b600061085082610833565b9050919050565b61086081610845565b82525050565b600060208201905061087b6000830184610857565b92915050565b61088a81610768565b82525050565b60006020820190506108a56000830184610881565b92915050565b6108b4816107d3565b81146108bf57600080fd5b50565b6000813590506108d1816108ab565b92915050565b6000602082840312156108ed576108ec610743565b5b60006108fb848285016108c2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061094b601b83610904565b915061095682610915565b602082019050919050565b6000602082019050818103600083015261097a8161093e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bb826107d3565b91506109c6836107d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fb576109fa610981565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a40826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7357610a72610981565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ac8600083610aad565b9150610ad382610ab8565b600082019050919050565b6000610ae982610abb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b29600b83610904565b9150610b3482610af3565b602082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b6000610b6a826107d3565b9150610b75836107d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bae57610bad610981565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf3826107d3565b9150610bfe836107d3565b925082610c0e57610c0d610bb9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3881610c19565b8114610c4357600080fd5b50565b600081519050610c5581610c2f565b92915050565b6000819050919050565b610c6e81610c5b565b8114610c7957600080fd5b50565b600081519050610c8b81610c65565b92915050565b600081519050610ca0816108ab565b92915050565b600080600080600060a08688031215610cc257610cc1610743565b5b6000610cd088828901610c46565b9550506020610ce188828901610c7c565b9450506040610cf288828901610c91565b9350506060610d0388828901610c91565b9250506080610d1488828901610c46565b9150509295509295909350565b6000610d2c82610c5b565b9150610d3783610c5b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7657610d75610981565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db357610db2610981565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610df057610def610981565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2d57610e2c610981565b5b82820290509291505056fea2646970667358221220473b8abf3e466467ef57578939fecf090e68474ef61c670aa9ac0beb3ba3bccd64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102d4565b005b3480156100a357600080fd5b506100be60048036038101906100b991906107a6565b610514565b6040516100cb91906107ec565b60405180910390f35b3480156100e057600080fd5b506100e961052c565b6040516100f691906107ec565b60405180910390f35b34801561010b57600080fd5b50610114610539565b6040516101219190610866565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b5061014961055d565b6040516101569190610890565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108d7565b610581565b6040516101939190610890565b60405180910390f35b6802b5e3af16b18800006101d97f0000000000000000000000000000000000000000000000000000000000000000346105c090919063ffffffff16565b101561021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610961565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026891906109b0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610359576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104045760006001828154811061037f5761037e610a06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fc90610a35565b91505061035c565b50600067ffffffffffffffff8111156104205761041f610a7e565b5b60405190808252806020026020018201604052801561044e5781602001602082028036833780820191505090505b506001908051906020019061046492919061069c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048b90610ade565b60006040518083038185875af1925050503d80600081146104c8576040519150601f19603f3d011682016040523d82523d6000602084013e6104cd565b606091505b5050905080610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890610b3f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cc836105fc565b90506000670de0b6b3a764000085836105e59190610b5f565b6105ef9190610be8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610ca6565b5050509150506402540be400816106949190610d21565b915050919050565b828054828255906000526020600020908101928215610715579160200282015b828111156107145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bc565b5b5090506107229190610726565b5090565b5b8082111561073f576000816000905550600101610727565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077382610748565b9050919050565b61078381610768565b811461078e57600080fd5b50565b6000813590506107a08161077a565b92915050565b6000602082840312156107bc576107bb610743565b5b60006107ca84828501610791565b91505092915050565b6000819050919050565b6107e6816107d3565b82525050565b600060208201905061080160008301846107dd565b92915050565b6000819050919050565b600061082c61082761082284610748565b610807565b610748565b9050919050565b600061083e82610811565b9050919050565b600061085082610833565b9050919050565b61086081610845565b82525050565b600060208201905061087b6000830184610857565b92915050565b61088a81610768565b82525050565b60006020820190506108a56000830184610881565b92915050565b6108b4816107d3565b81146108bf57600080fd5b50565b6000813590506108d1816108ab565b92915050565b6000602082840312156108ed576108ec610743565b5b60006108fb848285016108c2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061094b601b83610904565b915061095682610915565b602082019050919050565b6000602082019050818103600083015261097a8161093e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bb826107d3565b91506109c6836107d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fb576109fa610981565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a40826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7357610a72610981565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ac8600083610aad565b9150610ad382610ab8565b600082019050919050565b6000610ae982610abb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b29600b83610904565b9150610b3482610af3565b602082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b6000610b6a826107d3565b9150610b75836107d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bae57610bad610981565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf3826107d3565b9150610bfe836107d3565b925082610c0e57610c0d610bb9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3881610c19565b8114610c4357600080fd5b50565b600081519050610c5581610c2f565b92915050565b6000819050919050565b610c6e81610c5b565b8114610c7957600080fd5b50565b600081519050610c8b81610c65565b92915050565b600081519050610ca0816108ab565b92915050565b600080600080600060a08688031215610cc257610cc1610743565b5b6000610cd088828901610c46565b9550506020610ce188828901610c7c565b9450506040610cf288828901610c91565b9350506060610d0388828901610c91565b9250506080610d1488828901610c46565b9150509295509295909350565b6000610d2c82610c5b565b9150610d3783610c5b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7657610d75610981565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db357610db2610981565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610df057610def610981565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2d57610e2c610981565b5b82820290509291505056fea2646970667358221220473b8abf3e466467ef57578939fecf090e68474ef61c670aa9ac0beb3ba3bccd64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}