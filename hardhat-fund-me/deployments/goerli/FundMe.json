{
  "address": "0x5097Ffe17B8e820217459a4E8343af794cBA4f09",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x724907d715a77df50e14d90bd3e23bfc0a9f7bd17f09f858438799c5ed538b1b",
  "receipt": {
    "to": null,
    "from": "0x21de937C042de3572Dd653F9529161fc9dC46Feb",
    "contractAddress": "0x5097Ffe17B8e820217459a4E8343af794cBA4f09",
    "transactionIndex": 32,
    "gasUsed": "844393",
    "logsBloom": "0x
    "blockHash": "0xf4c378ad20a9494120d5f6824a7ef2887644d342660b7a47eae8cf2730520222",
    "transactionHash": "0x724907d715a77df50e14d90bd3e23bfc0a9f7bd17f09f858438799c5ed538b1b",
    "logs": [],
    "blockNumber": 7570862,
    "cumulativeGasUsed": "7038008",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "8b13fa95c7f0a7a057aea5ba785ad97a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    constructor() {\\n        i_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate() >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xd302f32f5d422279a4e05e439a6f38b0444269ce6a5d01548625109e35dd9de0\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice() internal view returns (uint256) {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice();\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x3ad92870bf0799ced350d4e9a80482e1b0102837acac6edd7c3c810157c908d8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c610e6061006d6000396000818161034a01526105fb0152610e606000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a592146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100c257610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100a26102aa565b6040516100af9190610a47565b60405180910390f35b6100c0610348565b005b3480156100ce57600080fd5b506100e960048036038101906100e4919061085e565b6105d4565b6040516100f69190610a47565b60405180910390f35b34801561010b57600080fd5b506101146105ec565b6040516101219190610a47565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b506101496105f9565b60405161015691906109ec565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190610887565b61061d565b60405161019391906109ec565b60405180910390f35b6802b5e3af16b18800006101af3461065c565b10156101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e790610a27565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023e9190610a7e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034291906108b0565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561049e57600060018281548110610419577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049690610cd2565b9150506103d0565b50600067ffffffffffffffff8111156104e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561050e5781602001602082028036833780820191505090505b506001908051906020019061052492919061074e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054b906109d7565b60006040518083038185875af1925050503d8060008114610588576040519150601f19603f3d011682016040523d82523d6000602084013e61058d565b606091505b50509050806105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890610a07565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610667610696565b90506000670de0b6b3a764000084836106809190610c1c565b61068a9190610ad4565b90508092505050919050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073091906108d9565b5050509150506402540be400816107479190610b05565b9250505090565b8280548282559060005260206000209081019282156107c7579160200282015b828111156107c65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061076e565b5b5090506107d491906107d8565b5090565b5b808211156107f15760008160009055506001016107d9565b5090565b60008135905061080481610dce565b92915050565b60008151905061081981610de5565b92915050565b60008135905061082e81610dfc565b92915050565b60008151905061084381610dfc565b92915050565b60008151905061085881610e13565b92915050565b60006020828403121561087057600080fd5b600061087e848285016107f5565b91505092915050565b60006020828403121561089957600080fd5b60006108a78482850161081f565b91505092915050565b6000602082840312156108c257600080fd5b60006108d084828501610834565b91505092915050565b600080600080600060a086880312156108f157600080fd5b60006108ff88828901610849565b95505060206109108882890161080a565b945050604061092188828901610834565b935050606061093288828901610834565b925050608061094388828901610849565b9150509295509295909350565b61095981610c76565b82525050565b600061096c600b83610a6d565b915061097782610d79565b602082019050919050565b600061098f601b83610a6d565b915061099a82610da2565b602082019050919050565b60006109b2600083610a62565b91506109bd82610dcb565b600082019050919050565b6109d181610cb2565b82525050565b60006109e2826109a5565b9150819050919050565b6000602082019050610a016000830184610950565b92915050565b60006020820190508181036000830152610a208161095f565b9050919050565b60006020820190508181036000830152610a4081610982565b9050919050565b6000602082019050610a5c60008301846109c8565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a8982610cb2565b9150610a9483610cb2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac957610ac8610d1b565b5b828201905092915050565b6000610adf82610cb2565b9150610aea83610cb2565b925082610afa57610af9610d4a565b5b828204905092915050565b6000610b1082610c88565b9150610b1b83610c88565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b5a57610b59610d1b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b9757610b96610d1b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610bd457610bd3610d1b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c1157610c10610d1b565b5b828202905092915050565b6000610c2782610cb2565b9150610c3283610cb2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6b57610c6a610d1b565b5b828202905092915050565b6000610c8182610c92565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610cdd82610cb2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1057610d0f610d1b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b610dd781610c76565b8114610de257600080fd5b50565b610dee81610c88565b8114610df957600080fd5b50565b610e0581610cb2565b8114610e1057600080fd5b50565b610e1c81610cbc565b8114610e2757600080fd5b5056fea26469706673582212209829d45f5fc1b0f27f6ef620e272a9c5032eb30f9e112d28571c60e873d87ddf64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a592146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100c257610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100a26102aa565b6040516100af9190610a47565b60405180910390f35b6100c0610348565b005b3480156100ce57600080fd5b506100e960048036038101906100e4919061085e565b6105d4565b6040516100f69190610a47565b60405180910390f35b34801561010b57600080fd5b506101146105ec565b6040516101219190610a47565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b506101496105f9565b60405161015691906109ec565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190610887565b61061d565b60405161019391906109ec565b60405180910390f35b6802b5e3af16b18800006101af3461065c565b10156101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e790610a27565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023e9190610a7e565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034291906108b0565b91505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cd576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561049e57600060018281548110610419577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049690610cd2565b9150506103d0565b50600067ffffffffffffffff8111156104e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561050e5781602001602082028036833780820191505090505b506001908051906020019061052492919061074e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054b906109d7565b60006040518083038185875af1925050503d8060008114610588576040519150601f19603f3d011682016040523d82523d6000602084013e61058d565b606091505b50509050806105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c890610a07565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610667610696565b90506000670de0b6b3a764000084836106809190610c1c565b61068a9190610ad4565b90508092505050919050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073091906108d9565b5050509150506402540be400816107479190610b05565b9250505090565b8280548282559060005260206000209081019282156107c7579160200282015b828111156107c65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061076e565b5b5090506107d491906107d8565b5090565b5b808211156107f15760008160009055506001016107d9565b5090565b60008135905061080481610dce565b92915050565b60008151905061081981610de5565b92915050565b60008135905061082e81610dfc565b92915050565b60008151905061084381610dfc565b92915050565b60008151905061085881610e13565b92915050565b60006020828403121561087057600080fd5b600061087e848285016107f5565b91505092915050565b60006020828403121561089957600080fd5b60006108a78482850161081f565b91505092915050565b6000602082840312156108c257600080fd5b60006108d084828501610834565b91505092915050565b600080600080600060a086880312156108f157600080fd5b60006108ff88828901610849565b95505060206109108882890161080a565b945050604061092188828901610834565b935050606061093288828901610834565b925050608061094388828901610849565b9150509295509295909350565b61095981610c76565b82525050565b600061096c600b83610a6d565b915061097782610d79565b602082019050919050565b600061098f601b83610a6d565b915061099a82610da2565b602082019050919050565b60006109b2600083610a62565b91506109bd82610dcb565b600082019050919050565b6109d181610cb2565b82525050565b60006109e2826109a5565b9150819050919050565b6000602082019050610a016000830184610950565b92915050565b60006020820190508181036000830152610a208161095f565b9050919050565b60006020820190508181036000830152610a4081610982565b9050919050565b6000602082019050610a5c60008301846109c8565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a8982610cb2565b9150610a9483610cb2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac957610ac8610d1b565b5b828201905092915050565b6000610adf82610cb2565b9150610aea83610cb2565b925082610afa57610af9610d4a565b5b828204905092915050565b6000610b1082610c88565b9150610b1b83610c88565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b5a57610b59610d1b565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b9757610b96610d1b565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610bd457610bd3610d1b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c1157610c10610d1b565b5b828202905092915050565b6000610c2782610cb2565b9150610c3283610cb2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6b57610c6a610d1b565b5b828202905092915050565b6000610c8182610c92565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610cdd82610cb2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1057610d0f610d1b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b610dd781610c76565b8114610de257600080fd5b50565b610dee81610c88565b8114610df957600080fd5b50565b610e0581610cb2565b8114610e1057600080fd5b50565b610e1c81610cbc565b8114610e2757600080fd5b5056fea26469706673582212209829d45f5fc1b0f27f6ef620e272a9c5032eb30f9e112d28571c60e873d87ddf64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
